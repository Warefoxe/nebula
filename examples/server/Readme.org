* run with mmproj model
#+BEGIN_SRC shell
  cargo r --features="llama" --example server -- -m models/ggml-model-q4_k.gguf --mmproj models/mmproj-model-f16.gguf.1
#+END_SRC

* Request examples
** command
#+BEGIN_SRC shell
  curl -X POST -H "Content-Type: application/json" http://127.0.0.1:8081/v1/chat/completions --data-binary @completion.json
#+END_SRC

*** without pictures

**** request
#+BEGIN_SRC json
  {
  "_model": "llava",
  "stream": false,
  "messages": [
    {
    "role": "user",
    "content": "write me simple rust program"
  },
    {
    "content":"Sure! Here is a simple Rust program that prints \"Hello, world!\" to the console:\n```\nfn main() {\n    println!(\"Hello, world!\");\n}\n```\nTo compile and run this program, you can use the `rustc` compiler and the `rust` command. For example, to compile and run the program, you can use the following commands:\n```\nrustc main.rs\nrust main.rs\n```\nThis will compile the program and then run it, printing \"Hello, world!\" to the console.\n\nI hope this helps! Let me know if you have any other questions.",
     "role":"assistant"
  },
    {
    "role": "user",
    "content": "rewrite it to output to stderr"
  }
  ]
}
#+END_SRC
**** response
#+BEGIN_SRC json
  {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "message": {
        "content": "To print the output of a Rust program to standard error (stderr), you can use the `stderr` function from the `std::io` module. Here is an example of how to modify the previous program to output \"Hello, world!\" to stderr instead of the console:\n```\nfn main() {\n    use std::io::stderr;\n    stderr().write_all(b\"Hello, world!\\n\").unwrap();\n}\n```\nThis program will compile and run the same as before, but the output will be written to stderr instead of the console.\n\nI hope this helps! Let me know if you have any other questions.",
        "role": "assistant"
      }
    }
  ],
  "created": 1677652288,
  "id": "chatcmpl",
  "model": "models/ggml-model-q4_k.gguf",
  "object": "chat.completion",
  "system_fingerprint": "fp",
  "usage": {
    "completion_tokens": 0,
    "completion_tokens_details": {
      "reasoning_tokens": 0
    },
    "prompt_tokens": 0,
    "total_tokens": 0
  }
}
#+END_SRC

**** streamed response
#+BEGIN_SRC json
    {"choices":[{"delta":{"content":"","role":"assistant"},"finish_reason":null,"index":0}],"model":"models/ggml-model-q4_k.gguf","object":"chat.completion.chunk"}
    {"choices":[{"delta":{"content":"To"},"finish_reason":null,"index":0}],"model":"models/ggml-model-q4_k.gguf","object":"chat.completion.chunk"}
    {"choices":[{"delta":{"content":" print"},"finish_reason":null,"index":0}],"model":"models/ggml-model-q4_k.gguf","object":"chat.completion.chunk"}
    {"choices":[{"delta":{"content":" the"},"finish_reason":null,"index":0}],"model":"models/ggml-model-q4_k.gguf","object":"chat.completion.chunk"}
    {"choices":[{"delta":{"content":" output"},"finish_reason":null,"index":0}],"model":"models/ggml-model-q4_k.gguf","object":"chat.completion.chunk"}
  ...
    {"choices":[{"delta":{},"finish_reason":"stop","index":0}],"model":"models/ggml-model-q4_k.gguf","object":"chat.completion.chunk"}
#+END_SRC

*** with pictures
**** request
#+BEGIN_SRC json
  {
    "_model": "llava",
    "stream": false,
    "messages": [
      {
        "role": "user",
        "content": "what is in this image?",
        "images": [""]
      }
    ]
  }
#+END_SRC
**** response
#+BEGIN_SRC json
  {
    "choices": [
      {
        "finish_reason": "stop",
        "index": 0,
        "logprobs": null,
        "message": {
          "content": "The image displays a beautiful fox standing in a grassy area, with the sunlight shining upon it. The fox's eyes are closed, giving the impression that it is asleep or simply enjoying the warmth. The fox has a fuzzy, red coat and appears to be looking at the photographer, making this a captivating and natural scene.",
          "role": "assistant"
        }
      }
    ],
    "created": 1677652288,
    "id": "chatcmpl",
    "model": "models/ggml-model-q4_k.gguf",
    "object": "chat.completion",
    "system_fingerprint": "fp",
    "usage": {
      "completion_tokens": 0,
      "completion_tokens_details": {
        "reasoning_tokens": 0
      },
      "prompt_tokens": 0,
      "total_tokens": 0
    }
  }
#+END_SRC
